<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-05T11:29:02 IST" name="Suite" finished-at="2023-08-05T11:29:19 IST" duration-ms="16752">
    <groups>
    </groups>
    <test started-at="2023-08-05T11:29:02 IST" name="Test" finished-at="2023-08-05T11:29:19 IST" duration-ms="16752">
      <class name="mytestpackage.test.ValidationErrorTest">
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:mytestpackage.test.ValidationErrorTest@3f9342d4]" started-at="2023-08-05T11:29:02 IST" name="launchBrowser" finished-at="2023-08-05T11:29:04 IST" duration-ms="2129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="errorMessage()[pri:0, instance:mytestpackage.test.ValidationErrorTest@3f9342d4]" started-at="2023-08-05T11:29:04 IST" name="errorMessage" finished-at="2023-08-05T11:29:04 IST" duration-ms="416" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email or passwor.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email or passwor.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at mytestpackage.test.ValidationErrorTest.errorMessage(ValidationErrorTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorMessage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:mytestpackage.test.ValidationErrorTest@3f9342d4]" started-at="2023-08-05T11:29:05 IST" name="closeBrowser" finished-at="2023-08-05T11:29:05 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- mytestpackage.test.ValidationErrorTest -->
      <class name="mytestpackage.test.StandAlone">
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:02 IST" name="launchBrowser" finished-at="2023-08-05T11:29:04 IST" duration-ms="1971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:04 IST" name="submitOrder" data-provider="getLoginData" finished-at="2023-08-05T11:29:08 IST" duration-ms="4428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=india, productname=IPHONE 13 PRO, password=Salman@123, email=salmankhan123@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:08 IST" name="closeBrowser" finished-at="2023-08-05T11:29:08 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:08 IST" name="launchBrowser" finished-at="2023-08-05T11:29:11 IST" duration-ms="2445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:11 IST" name="submitOrder" data-provider="getLoginData" finished-at="2023-08-05T11:29:15 IST" duration-ms="4309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=nepal, productname=ADIDAS ORIGINAL, password=Bahubali@123, email=bahubali123@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:15 IST" name="closeBrowser" finished-at="2023-08-05T11:29:15 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:15 IST" name="launchBrowser" finished-at="2023-08-05T11:29:16 IST" duration-ms="1073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="verifyProduct(java.util.HashMap)[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:16 IST" name="verifyProduct" data-provider="getLoginData" finished-at="2023-08-05T11:29:17 IST" depends-on-methods="mytestpackage.test.StandAlone.submitOrder" duration-ms="480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=india, productname=IPHONE 13 PRO, password=Salman@123, email=salmankhan123@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProduct -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:17 IST" name="closeBrowser" finished-at="2023-08-05T11:29:17 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:17 IST" name="launchBrowser" finished-at="2023-08-05T11:29:18 IST" duration-ms="1089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="verifyProduct(java.util.HashMap)[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:18 IST" name="verifyProduct" data-provider="getLoginData" finished-at="2023-08-05T11:29:19 IST" depends-on-methods="mytestpackage.test.StandAlone.submitOrder" duration-ms="537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=nepal, productname=ADIDAS ORIGINAL, password=Bahubali@123, email=bahubali123@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProduct -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:mytestpackage.test.StandAlone@7e4204e2]" started-at="2023-08-05T11:29:19 IST" name="closeBrowser" finished-at="2023-08-05T11:29:19 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- mytestpackage.test.StandAlone -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
